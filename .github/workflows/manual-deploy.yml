name: Manual Deploy to GitHub Pages

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Copy additional files
        run: |
          # Create .nojekyll file
          touch dist/.nojekyll
          
          # Copy essential files
          cp public/tank-icon.svg dist/ || echo "tank-icon.svg not found"
          cp public/404.html dist/ || echo "404.html not found"
          cp public/robots.txt dist/ || echo "robots.txt not found"
          cp public/sitemap.xml dist/ || echo "sitemap.xml not found"
          cp public/manifest.json dist/ || echo "manifest.json not found"
          cp public/static.html dist/ || echo "static.html not found"
          
          # Create manifest.json if it doesn't exist
          if [ ! -f dist/manifest.json ]; then
            echo "Creating manifest.json..."
            cat > dist/manifest.json << EOL
{
  "short_name": "Tank Wars",
  "name": "Tank Wars - Multiplayer",
  "icons": [
    {
      "src": "tank-icon.svg",
      "sizes": "64x64 32x32 24x24 16x16",
      "type": "image/svg+xml"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "#000000",
  "background_color": "#1a1a1a"
}
EOL
          fi
          
          # Verify build output
          echo "Checking build output..."
          ls -la dist/
          ls -la dist/assets/
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
  
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
